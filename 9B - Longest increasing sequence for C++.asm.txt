//Assignment9.asm
COMMENT @
Assignment 9, by Leonardo Blas
In this assignment, we write an assembly language subroutine that receives two
input parameters: the offset of an array and the array's size.  It must return
a count of the longest increasing sequence of integer values.
Furthermore, we call this subroutine from a C++ program that creates the array,
passes the arguments, and prints the value returned by the subroutine.
@

.586
.model flat,C
LngstIncSeq		PROTO,
	arrayOffset:	dword,
	arraySize:	dword

.code
LngstIncSeq		PROC	USES	esi edi ebx ecx edx,
	arrayOffset:	dword,
	arraySize:	dword

	mov			ecx, arraySize
	mov			esi, 0
	mov			edi, 0
	mov			edx, 0
L1:
	mov			eax, arrayOffset
	mov			eax, [eax + esi * 4]

	mov			ebx, esi
	add			ebx, 1
	cmp			ebx, arraySize
	jg			Tail

	mov			ebx, arrayOffset
	mov			ebx, [ebx + 4 + esi * 4]

	inc			esi

	cmp			eax, ebx
	jl			Advance
	jmp			Restart
	loop			L1

Advance:
	inc			edi
	jmp			L1
Restart:
	add			edi, 1				; edi counts the "spaces," not the "blocks"
	cmp			edx, edi
	jl			SaveNewLength
	mov			edi, 0
	jmp			L1
SaveNewLength:
	mov			edx, edi
	mov			edi, 0
	jmp			L1
Tail:
	cmp			edx, edi
	jl			SaveLastLength
	jmp			PrintResult
SaveLastLength:
	mov			edx, edi
	jmp			PrintResult
PrintResult:
	mov			eax, edx
	ret
LngstIncSeq		ENDP
END

COMMENT @
SAMPLE RUN:
Count of the longest increasing sequence of integers  = +13
@